[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[core]
  pager = less -FMRiX
  excludesfile = /home/robtay/.config/git/excludes
  attributesfile = ~/.git/attributes

[push]
  default = simple

[credential]
  helper = osxkeychain

[diff]
  tool = vimdiff

[difftool]
  prompt = false

[merge]
  tool = vimdiff
  
[mergetool]
  prompt = false

[alias]
  dag = log --graph --format='format:%C(yellow)%h%C(reset) %C(blue)\"%an\" <%ae>%C(reset) %C(magenta)%ar%C(reset)%C(auto)%d%C(reset)%n%s' --date-order
  # View the SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 10 --graph
  # View the current working tree status using the short format
  s = status -s

  # Show the diff between the latest commit and the current state

  # `git di $number` shows the diff between the state `$number` revisions ago and the current state

  # Pull in remote changes for the current repository and all its submodules

  # Clone a repository including all submodules
  c = clone --recursive

  # Commit all changes
  ca = !git add -A && git commit -av

  # Switch to a branch, creating it if necessary
  go = checkout -B

  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v

  # Credit an author on the latest commit
  credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

  # Interactive rebase with the given number of latest commits
  reb = "!r() { git rebase -i HEAD~$1; }; r"

  # Undo a `git push`
  undopush = push -f origin HEAD^:master

  # Undo a `git commit`
  undocommit = rebase HEAD^
